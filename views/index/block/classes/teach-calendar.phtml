<?php
$config = $this->getConfig();
$settings = $config->settings;
$base_url = $this->getUrl('');

?>
<style>

    .group:after {
        content: "";
        display: table;
        clear: both;
    }
    .teachcalendar-wrapper {
        position: relative;
        width: 100%;
        margin: 1em auto;
        border-radius: 5px;
        background: #fff;
    }
    #btnTPrev {
        float: left;
        margin-bottom: 20px;
        left: 10px;
    }
    #btnTNext {
        float: right;
        margin-bottom: 20px;
        right: 10px;
    }
    #btnTPrev,
    #btnTNext {
        background: transparent;
        border: none;
        outline: none;
        font-size: 1em;
        color: #fff;
        cursor: pointer;
        font-family: "Roboto Condensed", sans-serif;
        text-transform: uppercase;
        transition: all 0.3s ease;
        position: absolute;
        top: 13px;
    }
    #btnTPrev:hover,
    #btnTNext:hover {
        color: #28283b;
        font-weight: bold;
    }
</style>

<div class="teachcalendar-wrapper">
    <button id="btnTPrev" type="button"><</button>
    <button id="btnTNext" type="button">></button>
    <div id="divTCal"></div>

    <script>
        var TCal = function(divId) {

            //Store div id
            this.divId = divId;
            // Days of week, starting on Sunday
            this.DaysOfWeek = [
                'Sun',
                'Mon',
                'Tue',
                'Wed',
                'Thu',
                'Fri',
                'Sat'
            ];

            // Months, stating on January
            this.Months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ];

            // Set the current month, year
            var d = new Date();

            this.currMonth = d.getMonth();
            this.currYear = d.getFullYear();
            this.currDay = d.getDate();

        };

        // Goes to next month
        TCal.prototype.nextMonth = function() {
            if ( this.currMonth == 11 ) {
                this.currMonth = 0;
                this.currYear = this.currYear + 1;
            }
            else {
                this.currMonth = this.currMonth + 1;
            }
            this.showcurr();
        };

        // Goes to previous month
        TCal.prototype.previousMonth = function() {
            if ( this.currMonth == 0 ) {
                this.currMonth = 11;
                this.currYear = this.currYear - 1;
            }
            else {
                this.currMonth = this.currMonth - 1;
            }
            this.showcurr();
        };

        // Show current month
        TCal.prototype.showcurr = function() {
            this.showMonth(this.currYear, this.currMonth);
        };

        // Show month (year, month)
        TCal.prototype.showMonth = function(y, m) {

            var d = new Date()
                // First day of the week in the selected month
                , firstDayOfMonth = new Date(y, m, 1).getDay()
                // Last day of the selected month
                , lastDateOfMonth =  new Date(y, m+1, 0).getDate()
                // Last day of the previous month
                , lastDayOfLastMonth = m == 0 ? new Date(y-1, 11, 0).getDate() : new Date(y, m, 0).getDate();


            var html = '<table>';

            // Write selected month and year
            html += '<thead><tr class="mnY">';
            html += '<td colspan="7">' + this.Months[m] + ' ' + y + '</td>';
            html += '</tr></thead>';


            // Write the header of the days of the week
            html += '<tr class="days">';
            for(var i=0; i < this.DaysOfWeek.length;i++) {
                html += '<td>' + this.DaysOfWeek[i] + '</td>';
            }
            html += '</tr>';

            // Write the days
            var i=1;
            do {

                var dow = new Date(y, m, i).getDay();

                // If Sunday, start new row
                if ( dow == 0 ) {
                    html += '<tr>';
                }
                // If not Sunday but first day of the month
                // it will write the last days from the previous month
                else if ( i == 1 ) {
                    html += '<tr>';
                    var k = lastDayOfLastMonth - firstDayOfMonth+1;
                    for(var j=0; j < firstDayOfMonth; j++) {
                        html += '<td class="not-current">' + k + '</td>';
                        k++;
                    }
                }

                // Write the current day in the loop
                var chk = new Date();
                var chkY = chk.getFullYear();
                var chkM = chk.getMonth();
                if (chkY == this.currYear && chkM == this.currMonth && i == this.currDay) {
                    html += '<td class="today"><a href="#">' + i + '</a></td>';
                } else {
                    html += '<td class="normal">' + i + '</td>';
                }
                // If Saturday, closes the row
                if ( dow == 6 ) {
                    html += '</tr>';
                }
                // If not Saturday, but last day of the selected month
                // it will write the next few days from the next month
                else if ( i == lastDateOfMonth ) {
                    var k=1;
                    for(dow; dow < 6; dow++) {
                        html += '<td class="not-current">' + k + '</td>';
                        k++;
                    }
                }

                i++;
            }while(i <= lastDateOfMonth);

            // Closes table
            html += '</table>';

            // Write HTML to the div
            document.getElementById(this.divId).innerHTML = html;
        };

        // On Load of the window
        window.onload = function() {
            // Start teach calendar
            var tcal = new TCal("divTCal");

            tcal.showcurr();

            // Bind next and previous button clicks
            getId('btnTNext').onclick = function() {
                tcal.nextMonth();
            };
            getId('btnTPrev').onclick = function() {
                tcal.previousMonth();
            };

            // Start profile calendar
            if (jQuery('#divCal').length > 0) {
                var c = new Cal("divCal");
                c.showcurr();

                // Bind next and previous button clicks
                getId('btnNext').onclick = function() {
                    c.nextMonth();
                };
                getId('btnPrev').onclick = function() {
                    c.previousMonth();
                };
            }

            jQuery('.normal').on("click", function(e) {
                var monthNYear = jQuery("tr.mnY")[0].innerText;
                monthNYear = monthNYear.split(" ");
                var scheduleDate =  monthNYear[0] + " " + e.target.innerText + ", " + monthNYear[1];
                document.getElementById("schedtoday").innerHTML = scheduleDate;
                showSchedule(e.target.innerText + " "+ monthNYear[0] + " " + monthNYear[1]);
            });

            jQuery('.step-paynow').on("click", function(e) {
                goPay(0.1);
            });
        }


        // Get element by id
        function getId(id) {
            return document.getElementById(id);
        }


        function showSchedule(str){
            if (str.length == 0){ //exit function if nothing has been typed in the textbox

                document.getElementById("sched1").innerHTML=""; //clear previous results

                return;

            }

            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari

                xmlhttp=new XMLHttpRequest();

            } else {// code for IE6, IE5

                xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");

            }

            xmlhttp.onreadystatechange=function() {

                if (xmlhttp.readyState == 4 && xmlhttp.status == 200){

                    document.getElementById("schedtoday").innerHTML=xmlhttp.responseText;

                }

            }

            xmlhttp.open("GET","../ajax/schedule.php?schedule="+str,true);

            xmlhttp.send();

        }



      /**  function goPay(str){
            if (str.length == 0){ //exit function if nothing has been typed in the textbox

                document.getElementById("schedtoday").innerHTML=""; //clear previous results

                return;

            }

            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari

                xmlhttp=new XMLHttpRequest();

            } else {// code for IE6, IE5

                xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");

            }

            xmlhttp.onreadystatechange=function() {

                if (xmlhttp.readyState == 4 && xmlhttp.status == 200){

                    document.getElementById("schedtoday").innerHTML=xmlhttp.responseText;

                }

            }

            xmlhttp.open("GET","../ajax/paynow.php?pay="+str,true);

            xmlhttp.send();

        } **/
    </script>
</div>

<div class="ledger">
    <div class="ledger">
        <span class="enrolled">Enrolled Class</span>
        <span class="opened">Opened Class</span>
    </div>
</div>
<div class="scheduled-for-the-day">
    <div id="schedtoday"></div>
<!--    <a href="javascript:void(0)" class="button step-paynow">Pay Now(Test)</a>-->
</div>
<div class="new-schedule-entry">
    <form class="new_schedule_form" action="<?php echo $this->getUrl('account/newclassentryPost') ?>" method="post" >
        <div class="bdate">
        </div>
        <input type="text" required name="title" placeholder="Title"/>
        <br>
        <input type="text" required name="description" placeholder="Description"/>
        <button type="submit" class="button sign-up">Save</button>
    </form>
    <!--    <a href="javascript:void(0)" class="button step-paynow">Pay Now(Test)</a>-->
</div>